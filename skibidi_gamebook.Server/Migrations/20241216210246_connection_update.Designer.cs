// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using skibidi_gamebook.Server.Data;

#nullable disable

namespace skibidi_gamebook.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241216210246_connection_update")]
    partial class connection_update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Achivement", b =>
                {
                    b.Property<int>("AId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemIId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AId");

                    b.HasIndex("ItemIId");

                    b.ToTable("Achivements");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Connection", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AchivementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemIId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lock")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomRId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CId");

                    b.HasIndex("AchivementId");

                    b.HasIndex("ItemIId");

                    b.HasIndex("RoomRId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Item", b =>
                {
                    b.Property<int>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Room", b =>
                {
                    b.Property<int>("RId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Achivement", b =>
                {
                    b.HasOne("skibidi_gamebook.Server.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Connection", b =>
                {
                    b.HasOne("skibidi_gamebook.Server.Models.Achivement", "Achivement")
                        .WithMany()
                        .HasForeignKey("AchivementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("skibidi_gamebook.Server.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("skibidi_gamebook.Server.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomRId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achivement");

                    b.Navigation("Item");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
