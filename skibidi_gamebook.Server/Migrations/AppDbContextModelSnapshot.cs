// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using skibidi_gamebook.Server.Data;

#nullable disable

namespace skibidi_gamebook.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Achivement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Achivements");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lock")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RequirementsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemId1");

                    b.HasIndex("RequirementsId");

                    b.HasIndex("ToId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RequirementsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RequirementsId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Connection", b =>
                {
                    b.HasOne("skibidi_gamebook.Server.Models.Room", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("skibidi_gamebook.Server.Models.Item", null)
                        .WithMany("ConnectionsFrom")
                        .HasForeignKey("ItemId");

                    b.HasOne("skibidi_gamebook.Server.Models.Item", null)
                        .WithMany("ConnectionsTo")
                        .HasForeignKey("ItemId1");

                    b.HasOne("skibidi_gamebook.Server.Models.Achivement", "Requirements")
                        .WithMany()
                        .HasForeignKey("RequirementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("skibidi_gamebook.Server.Models.Room", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("Requirements");

                    b.Navigation("To");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Item", b =>
                {
                    b.HasOne("skibidi_gamebook.Server.Models.Room", null)
                        .WithMany("Items")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Task", b =>
                {
                    b.HasOne("skibidi_gamebook.Server.Models.Achivement", "Requirements")
                        .WithMany("Tasks")
                        .HasForeignKey("RequirementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Achivement", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Item", b =>
                {
                    b.Navigation("ConnectionsFrom");

                    b.Navigation("ConnectionsTo");
                });

            modelBuilder.Entity("skibidi_gamebook.Server.Models.Room", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
